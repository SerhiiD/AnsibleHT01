---
# tasks file for mysql-replication

- name: Get master replication status
  mysql_replication:
    mode: getmaster
    login_user: "{{ mysql_login_user }}"
    login_password: "{{ mysql_login_password }}"
  when: inventory_hostname == groups[mysql_database_group][0]
  register: master_replication_status
  tags:
    - mysql-replication
    - mysql-replication-master

- name: Get slave replication status
  mysql_replication:
    mode: getslave
    login_user: "{{ mysql_login_user }}"
    login_password: "{{ mysql_login_password }}"
  when: inventory_hostname != groups[mysql_database_group][0]
  register: slave_replication_status
  tags:
    - mysql-replication
    - mysql-replication-slave

#########
- debug:
    var: master_replication_status.File
  when: inventory_hostname == groups[mysql_database_group][0]

- debug:
    var: slave_replication_status
  when: inventory_hostname != groups[mysql_database_group][0]
#########

- name: Set mysql server-id
  lineinfile:
    path: /etc/my.cnf
    regexp: "^server-id"
    line: "server-id={{ groups[mysql_database_group].index(inventory_hostname) }}"
    state: present
  notify:
    - restart_mysql
  tags:
    - mysql-replication

- name: Create folder for log_bin
  file:
    path: "{{ mysql_replication_log_bin | dirname }}"
    state: directory
    owner: mysql
    group: mysql
    mode: '0775'
  tags:
    - mysql-replication
    - mysql-replication-master
    - mysql-replication-slave

- name: Set mysql binlog-do-db
  lineinfile:
    path: /etc/my.cnf
    line: "binlog_do_db={{ item }}"
    state: present
  loop: "{{ mysql_replication_dbs_to_replicate }}"
  notify:
    - restart_mysql
  tags:
    - mysql-replication
    - mysql-replication-master

- name: Set mysql log_bin on master
  lineinfile:
    path: /etc/my.cnf
    regexp: "^log_bin"
    line: "log_bin={{ mysql_replication_log_bin }}"
    state: present
  when: inventory_hostname == groups[mysql_database_group][0]
  notify:
    - restart_mysql
  tags:
    - mysql-replication
    - mysql-replication-master

- name: Create folder for relay-log on slave
  file:
    path: "{{ mysql_replication_relay_log | dirname }}"
    state: directory
    owner: mysql
    group: mysql
    mode: '0775'
  tags:
    - mysql-replication
    - mysql-replication-slave

- name: Set mysql relay-log on slave
  lineinfile:
    path: /etc/my.cnf
    regexp: "^relay-log"
    line: "relay-log={{ mysql_replication_relay_log }}"
    state: present
  when: inventory_hostname != groups[mysql_database_group][0]
  notify:
    - restart_mysql
  tags:
    - mysql-replication
    - mysql-replication-slave

- name: flush_handlers
  meta: flush_handlers

- name: Get master replication status
  mysql_replication:
    mode: getmaster
    login_user: "{{ mysql_login_user }}"
    login_password: "{{ mysql_login_password }}"
  when: inventory_hostname == groups[mysql_database_group][0]
  register: master_replication_status
  tags:
    - mysql-replication
    - mysql-replication-master

- name: Get slave replication status
  mysql_replication:
    mode: getslave
    login_user: "{{ mysql_login_user }}"
    login_password: "{{ mysql_login_password }}"
  when: inventory_hostname != groups[mysql_database_group][0]
  register: slave_replication_status
  tags:
    - mysql-replication
    - mysql-replication-slave

- name: Set master
  mysql_replication:
    login_user: "{{ mysql_login_user }}"
    login_password: "{{ mysql_login_password }}"
    mode: changemaster
    master_host: "{{ hostvars[groups[mysql_database_group][0]]['ansible_eth1']['ipv4']['address'] }}"
    master_user: "{{ mysql_replication_replication_user }}"
    master_password: "{{ mysql_replication_replication_password }}"
    master_log_file: "{{ hostvars[groups[mysql_database_group][0]]['master_replication_status']['File'] }}"
    master_log_pos: "{{ hostvars[groups[mysql_database_group][0]]['master_replication_status']['Position'] }}"
  when: inventory_hostname != groups[mysql_database_group][0]
  tags:
    - mysql-replication

- debug:
    var: master_replication_status
  when: inventory_hostname == groups[mysql_database_group][0]

- debug:
    var: slave_replication_status
  when: inventory_hostname != groups[mysql_database_group][0]

# - debug:
#     var: groups[mysql_database_group].index(inventory_hostname)
